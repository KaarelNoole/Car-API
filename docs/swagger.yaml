openapi: 3.0.2
info:
    title: Cars-API
    version: 1.0.0
    description: '### This is a Swagger UI for our Car API'
paths:
    /locations:
        get:
            tags:
                - locations
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Empty array:
                                    value: []
                    description: Successful
            summary: List of Locations
            description: |
                Returns a list of all locations
        post:
            requestBody:
                description: A new location to be created
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            CreatedLocation:
                                value:
                                    city: Tokyo
                                    country: Japan
                required: true
            tags:
                - locations
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                CreatedLocation:
                                    value:
                                        id: 4
                                        city: Tokyo
                                        country: Japan
                    description: Success
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Missing params:
                                    value:
                                        error: missing one or all parameters
                    description: One or all params are missing
            summary: Creates a location
            description: Creates a new location
    /sellers:
        get:
            tags:
                - sellers
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Empty array:
                                    value: []
                    description: Successful
            summary: Get a List of sellers
            description: |
                Returns a list of sellers
        post:
            requestBody:
                description: A new seller to be created
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            UpdateSeller:
                                value:
                                    name: Karl
                                    email: karlnoole@gmail.com
                                    phone: '5278921'
                required: true
            tags:
                - sellers
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                CreatedSeller:
                                    value:
                                        id: 4
                                        name: Karl
                                        email: karlnoole@gmail.com
                                        phone: '5278921'
                    description: Created new seller
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: missing one or all parameters
                    description: One or all params are missing
            summary: Creates a  seller
            description: Creates a new seller
    /prices:
        get:
            tags:
                - prices
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Empty Array:
                                    value: []
                    description: Successful
            summary: Get a list of all prices
            description: Returns a list of all prices in API
        post:
            requestBody:
                description: A new price to be created
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/new-price'
                        examples:
                            NewPrice:
                                value:
                                    amount: 97
                                    currency: €
                required: true
            tags:
                - prices
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                CreatedPrices:
                                    value:
                                        id: 4
                                        amount: 10000
                                        currency: €
                    description: Success
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: missing one or all parameters
                    description: One or all params are missing
            summary: Creates a new price
            description: Creates a new model
    '/locations/{id}':
        get:
            tags:
                - locations
            parameters:
                -
                    examples:
                        small:
                            value: '6'
                    name: id
                    description: Identificator for the location
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Single location:
                                    value:
                                        id: 33
                                        city: Berlin
                                        country: Germany
                    description: |+
                        Successful

                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value: "\t{\"error\":\"location not found\"}"
                    description: Location was not found in location array
            summary: Get full details of a location
            description: Returns full details of a given id location
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            New Location:
                                value:
                                    id: 40
                                    city: Tokyo
                                    country: Japan
                required: true
            tags:
                - locations
            parameters:
                -
                    examples:
                        small:
                            value: |
                                4
                    name: id
                    description: Identificator for the location
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    description: |
                        Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value: "\t{\"error\":\"location not found\"}"
                    description: location not found
            summary: Add full details of a brand
            description: Adds full details of a given location id
        delete:
            tags:
                - locations
            parameters:
                -
                    examples:
                        small:
                            value: '4'
                    name: id
                    description: Identificator for the location
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    description: |
                        Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value: "\t{\"error\":\"location not found\"}"
                    description: location not found
            summary: Deletes location
            description: Deletes location with given id
    '/prices/{id}':
        get:
            tags:
                - prices
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of a given price:
                                    value:
                                        id: 33
                                        amount: 3000
                                        currency: €
                    description: |
                        Returns full details of a given id price
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value: "\t{\"error\":\"price not found\"}"
                    description: Price was not found in price array
            summary: Get full details of a price
            description: Returns full details of a given id price
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            Update price:
                                value:
                                    id: 40
                                    amount: 10000
                                    origin: £
                required: true
            tags:
                - prices
            parameters:
                -
                    examples:
                        small:
                            value: '4'
                    name: id
                    description: Identificator for the price
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value: "\t{\"error\":\"price not found\"}"
                    description: price not found
            summary: Add full details of price
            description: Adds full details of a given price id
        delete:
            tags:
                - prices
            parameters:
                -
                    examples:
                        small:
                            value: '4'
                    name: id
                    description: Identificator for the price
                    schema:
                        type: number
                    in: path
                    required: true
            responses:
                '204':
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value: "\t{\"error\":\"price not found\"}"
                    description: price not found
            summary: Deletes price
            description: Deletes price with given id
        parameters:
            -
                name: id
                schema:
                    type: integer
                in: path
                required: true
    '/sellers/{id}':
        get:
            tags:
                - sellers
            parameters:
                -
                    examples:
                        small:
                            value: '6'
                    name: id
                    description: Identificator for the seller
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of a given seller:
                                    value:
                                        id: 33
                                        name: Kaarel
                                        email: kaarelnoole@gmail.com
                                        phone: '32708712'
                    description: |
                        Returns full details of a given id seller
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value: "\t{\"error\":\"seller not found\"}"
                    description: Seller was not found in seller array
            summary: Get full details of a seller
            description: Returns full details of a given id seller
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            New Seller:
                                value:
                                    id: 40
                                    name: Karl
                                    email: karlnoole@gmail.com
                                    phone: '5278921'
                required: true
            tags:
                - sellers
            parameters:
                -
                    examples:
                        small:
                            value: '3'
                    name: id
                    description: Identificator for the seller
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value: "\t{\"error\":\"seller not found\"}"
                    description: seller not found
            summary: Add full details of a seller
            description: Adds full details of a given sellers id
        delete:
            tags:
                - sellers
            parameters:
                -
                    examples:
                        small:
                            value: '6'
                    name: id
                    description: Identificator for the seller
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value: "\t{\"error\":\"seller not found\"}"
                    description: seller not found
            summary: Deletes seller
            description: Deletes seller with given id
    /Cars:
        get:
            tags:
                - Cars
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Empty array:
                                    value: []
                    description: "\t\r\n\r\nSuccessful"
            summary: Get a list of all cars
            description: Returns a list of all car brands in API
        post:
            requestBody:
                description: A new car to be created
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            UpdateCar:
                                value:
                                    brand: Toyota
                                    model: Model Y
                                    year: 2022
                                    origin: China
                required: true
            tags:
                - Cars
            responses:
                '201':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                CreatedCar:
                                    value:
                                        id: 4
                                        brand: Toyota
                                        model: Model Y
                                        year: 2022
                                        origin: China
                    description: Success
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: missing one or all parameters
                    description: One or all params are missing
            summary: Creates a car
            description: |
                Creates a new car
    '/Cars/{id}':
        get:
            tags:
                - Cars
            parameters:
                -
                    examples:
                        small:
                            value: '6'
                    name: id
                    description: Identificator for the car
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Single Car:
                                    value:
                                        id: 33
                                        brand: Tesla
                                        model: Model S
                                        year: 2016
                                        origin: USA
                    description: |
                        Successful
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value: "\t{\"error\":\"Car not found\"}"
                    description: Car was not found in car array
                '500':
                    description: 'Internal Server error, Try again later'
            summary: Get full details of a car
            description: Returns full details of a given car id
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                type: string
                        examples:
                            Update Car:
                                value:
                                    id: 40
                                    brand: Tesla
                                    model: Cybertruck
                                    year: 2025
                                    origin: USA
                required: true
            tags:
                - Cars
            responses:
                '204':
                    description: |
                        Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Car not found
                    description: Car not found
                '500':
                    description: 'Internal Server error, Try again later'
            summary: Add full details of a car
            description: |
                Adds full detail of a given car id.
        delete:
            tags:
                - Cars
            parameters:
                -
                    examples:
                        small:
                            value: '6'
                    name: id
                    description: Identificator for the car
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '204':
                    description: Succeeded
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                error:
                                    value:
                                        error: Car not found
                    description: Car not found
            summary: Deletes car
            description: Deletes car with given id
        parameters:
            -
                name: id
                schema:
                    type: integer
                in: path
                required: true
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message
        new-location:
            description: '{City:''Tallinn'', Country:''Estonia'' }'
            required:
                - city
                - country
            type: object
            properties:
                city:
                    description: ''
                    type: string
                country:
                    description: ''
                    type: string
        new-price:
            description: '{Amount: ''3000'',  currency: ''£''}'
            required:
                - Amount
                - currency
            type: object
            properties:
                Amount:
                    description: ''
                    type: integer
                currency:
                    description: ''
                    type: string
        new-seller:
            description: '{Name: ''Martin'',  Email: ''martinhobesalu@gmail.com'', Phone: ''98347561''}'
            required:
                - name
                - email
                - phone
            type: object
            properties:
                name:
                    description: ''
                    type: string
                email:
                    description: ''
                    type: string
                phone:
                    description: ''
                    type: integer
        Delete-price:
            description: ''
            required:
                - id
            type: object
            properties:
                id:
                    description: ''
                    type: string
            example:
                id: 1
        Delete-seller:
            description: ''
            required:
                - id
            type: object
            properties:
                id:
                    description: ''
                    type: string
            example:
                id: 1
        locations:
            description: ''
            required:
                - id
            type: object
            properties:
                id:
                    description: ''
                    type: string
            example:
                id: 1
        new-car:
            description: '{''brand: ''Ford'',  origin: ''Germany''}'
            required:
                - brand
                - origin
                - model
                - year
            type: object
            properties:
                origin:
                    description: ''
                    type: string
                brand:
                    description: ''
                    type: string
                model:
                    description: ''
                    type: string
                year:
                    description: ''
                    type: number
        car:
            description: ''
            required:
                - id
            type: object
            properties:
                id:
                    description: ''
                    type: string
            example:
                id: 1
